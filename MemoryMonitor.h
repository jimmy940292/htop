/* Do not edit this file. It was automatically genarated. */

#ifndef HEADER_MemoryMonitor
#define HEADER_MemoryMonitor

#define _GNU_SOURCE

#include <stdlib.h>
#include <assert.h>
#include <stdio.h>
#include <string.h>
#include <stdbool.h>


#undef strdup
#undef malloc
#undef realloc
#undef calloc
#undef free

typedef struct MemoryMonitorItem_ MemoryMonitorItem;

struct MemoryMonitorItem_ {
   void* data;
   char* file;
   int line;
   MemoryMonitorItem* next;
};

typedef struct MemoryMonitor_ {
   MemoryMonitorItem* first;
   int allocations;
   int deallocations;
   int size;
} MemoryMonitor;


void MemoryMonitor_new();

void* MemoryMonitor_malloc(int size, char* file, int line);

void* MemoryMonitor_calloc(int a, int b, char* file, int line);

void* MemoryMonitor_realloc(void* ptr, int size, char* file, int line);

void* MemoryMonitor_strdup(char* str, char* file, int line);

void MemoryMonitor_free(void* data, char* file, int line);

void MemoryMonitor_assertSize();

int MemoryMonitor_getBlockCount();

void MemoryMonitor_registerAllocation(void* data, char* file, int line);

void MemoryMonitor_registerDeallocation(void* data, char* file, int line);

void MemoryMonitor_report();

#endif
